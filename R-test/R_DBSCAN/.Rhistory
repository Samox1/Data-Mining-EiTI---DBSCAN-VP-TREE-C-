show(square)
Cole <- c("red", "green", "blue", "violet", "gold")
Radi <- 0.5
cluster <- as.factor(Data120[,4])
square <- ggplot(Data120[,1:2], aes(x=V1, y=V2, colour= cluster)) + geom_point()
for(x in 1:length(Data120[,1])){
square <- square + gg_circle(r=Tree1$Mediana[Tree1$VP.Index==x], xc=Data120[x,1], yc=Data120[x,2], color=, alpha=0.2)
# square <- square + gg_circle(r=Radi, xc=Data120[x,1], yc=Data120[x,2], color=Cole[cluster[x]], alpha=0.2)
# print(x)
}
show(square)
Data_120 <- as.data.frame(read.table("Data_120.csv", header=FALSE ,sep=","))
table(Data_120[,3])
table(Data_120[,4])
# X <- seq(0.1,2, by=0.1)
# Y <- seq(0.1,1.05, by=0.05)
# R <- seq(0.1,2, by=0.1)
# X <- cbind(X, Y)
# X <- cbind(X, R)
# X <- as.data.frame(X)
#
gg_circle <- function(r, xc, yc, color="black", fill=NA, ...) {
x <- xc + r*cos(seq(0, pi, length.out=100))
ymax <- yc + r*sin(seq(0, pi, length.out=100))
ymin <- yc + r*sin(seq(0, -pi, length.out=100))
annotate("ribbon", x=x, ymin=ymin, ymax=ymax, color=color, fill=fill, ...)
}
library(tidyverse)
library(MASS)
# library(ggplot2)
library(ggforce)
library(dbscan)
library(igraph)
library(cowplot)
Cole <- c("red", "green", "blue", "violet", "gold")
Radi <- 0.5
cluster <- as.factor(Data120[,4])
square <- ggplot(Data120[,1:2], aes(x=V1, y=V2, colour= cluster)) + geom_point()
for(x in 1:length(Data120[,1])){
square <- square + gg_circle(r=Tree1$Mediana[Tree1$VP.Index==x], xc=Data120[x,1], yc=Data120[x,2], color=, alpha=0.2)
# square <- square + gg_circle(r=Radi, xc=Data120[x,1], yc=Data120[x,2], color=Cole[cluster[x]], alpha=0.2)
# print(x)
}
show(square)
square <- ggplot(Data120[,1:2], aes(x=V1, y=V2, colour= cluster)) + geom_point()
for(x in 1:length(Data120[,1])){
# square <- square + gg_circle(r=Tree1$Mediana[Tree1$VP.Index==x], xc=Data120[x,1], yc=Data120[x,2], color=, alpha=0.2)
square <- square + gg_circle(r=Radi, xc=Data120[x,1], yc=Data120[x,2], color=Cole[cluster[x]], alpha=0.2)
# print(x)
}
show(square)
library(MASS)
S <- matrix(c(1,0,0,1),2,2)
mt1 <- c(0,0)
?MASS
??MASS
library(MASS)
S <- matrix(c(1,0,0,1),2,2)
mt1 <- c(0,0)
n0 <- 15
X0 <- mvrnorm(n0, mt1, S)
Data_Cpp <- X0
# Write to CSV
write.csv(DATA_Cpp, "DataCpp.csv")
DATA_Cpp <- X0
# Write to CSV
write.csv(DATA_Cpp, "DataCpp.csv")
kNN1 <- kNNdistplot(DATA_Cpp, k = 1)
plot(X0, ylim = c(-5,15), xlim = c(-10,15), pch = 19, col = "blue", xlab = "X", ylab = "Y", font = 2, asp = 1)
?mvrnorm
plot(X0, ylim = c(-5,15), xlim = c(min(X0[,1]),max(X0[,2])), pch = 19, col = "blue", xlab = "X", ylab = "Y", font = 2, asp = 1)
plot(X0, ylim = c(-5,15), xlim = c(min(X0[,1]),max(X0[,1])), pch = 19, col = "blue", xlab = "X", ylab = "Y", font = 2, asp = 1)
plot(X0, ylim = c(-3,4), xlim = c(min(X0[,1]),max(X0[,1])), pch = 19, col = "blue", xlab = "X", ylab = "Y", font = 2, asp = 1)
library(tidyverse)
library(MASS)
# library(ggplot2)
library(ggforce)
library(dbscan)
library(igraph)
library(cowplot)
# X <- seq(0.1,2, by=0.1)
# Y <- seq(0.1,1.05, by=0.05)
# R <- seq(0.1,2, by=0.1)
# X <- cbind(X, Y)
# X <- cbind(X, R)
# X <- as.data.frame(X)
#
gg_circle <- function(r, xc, yc, color="black", fill=NA, ...) {
x <- xc + r*cos(seq(0, pi, length.out=100))
ymax <- yc + r*sin(seq(0, pi, length.out=100))
ymin <- yc + r*sin(seq(0, -pi, length.out=100))
annotate("ribbon", x=x, ymin=ymin, ymax=ymax, color=color, fill=fill, ...)
}
Data120 <- as.data.frame(read.table("Data_Cluster_15.csv", header=FALSE,sep=","))
Cole <- c("red", "green", "blue", "violet", "gold")
Radi <- 0.5
cluster <- as.factor(Data120[,4])
square <- ggplot(Data120[,1:2], aes(x=V1, y=V2, colour= cluster)) + geom_point()
for(x in 1:length(Data120[,1])){
# square <- square + gg_circle(r=Tree1$Mediana[Tree1$VP.Index==x], xc=Data120[x,1], yc=Data120[x,2], color=, alpha=0.2)
square <- square + gg_circle(r=Radi, xc=Data120[x,1], yc=Data120[x,2], color=Cole[cluster[x]], alpha=0.2)
# print(x)
}
show(square)
Radi <- 0.7
cluster <- as.factor(Data120[,4])
square <- ggplot(Data120[,1:2], aes(x=V1, y=V2, colour= cluster)) + geom_point()
for(x in 1:length(Data120[,1])){
# square <- square + gg_circle(r=Tree1$Mediana[Tree1$VP.Index==x], xc=Data120[x,1], yc=Data120[x,2], color=, alpha=0.2)
square <- square + gg_circle(r=Radi, xc=Data120[x,1], yc=Data120[x,2], color=Cole[cluster[x]], alpha=0.2)
# print(x)
}
show(square)
cluster <- as.factor(Data120[,5])
square <- ggplot(Data120[,1:2], aes(x=V1, y=V2, colour= cluster)) + geom_point()
for(x in 1:length(Data120[,1])){
# square <- square + gg_circle(r=Tree1$Mediana[Tree1$VP.Index==x], xc=Data120[x,1], yc=Data120[x,2], color=, alpha=0.2)
square <- square + gg_circle(r=Radi, xc=Data120[x,1], yc=Data120[x,2], color=Cole[cluster[x]], alpha=0.2)
# print(x)
}
show(square)
View(Data120)
S <- matrix(c(1,0,0,1),2,2)
mt0 <- c(5,5)
mt1 <- c(0,0)
mt2 <- c(10,10)
mt3 <- c(12,12)
mt4 <- c(7, 11)
mt5 <- c(-5, 12)
mt6 <- c(-9, 12)
n0 <- 15
n1 <- 1000
n2 <- 1000
n3 <- 1000
n4 <- 1000
n5 <- 1000
n6 <- 1000
n <- n1 + n2 + n3 + n4 + n5 + n6
X0 <- mvrnorm(n0, mt0, S)
X1 <- mvrnorm(n0, mt1, S)
X2 <- mvrnorm(n2, mt2, S)
X3 <- mvrnorm(n3, mt3, S)
X4 <- mvrnorm(n4, mt4, S)
X5 <- mvrnorm(n5, mt5, S)
X6 <- mvrnorm(n6, mt6, S)
DATA_Cpp <- rbind(X0,X1)
kNN1 <- kNNdistplot(DATA_Cpp, k = 1)
plot(DATA_Cpp, ylim = c(-3,4), xlim = c(min(X0[,1]),max(X0[,1])), pch = 19, col = "blue", xlab = "X", ylab = "Y", font = 2, asp = 1)
plot(DATA_Cpp, ylim = c(-5,15), xlim = c(min(X0[,1]),max(X0[,1])), pch = 19, col = "blue", xlab = "X", ylab = "Y", font = 2, asp = 1)
plot(DATA_Cpp, pch = 19, col = "blue", xlab = "X", ylab = "Y", font = 2, asp = 1)
mt0 <- c(3,3)
mt1 <- c(0,0)
mt2 <- c(10,10)
mt3 <- c(12,12)
mt4 <- c(7, 11)
mt5 <- c(-5, 12)
mt6 <- c(-9, 12)
n0 <- 15
n1 <- 1000
n2 <- 1000
n3 <- 1000
n4 <- 1000
n5 <- 1000
n6 <- 1000
n <- n1 + n2 + n3 + n4 + n5 + n6
X0 <- mvrnorm(n0, mt0, S)
X1 <- mvrnorm(n0, mt1, S)
X2 <- mvrnorm(n2, mt2, S)
X3 <- mvrnorm(n3, mt3, S)
X4 <- mvrnorm(n4, mt4, S)
X5 <- mvrnorm(n5, mt5, S)
X6 <- mvrnorm(n6, mt6, S)
DATA_Cpp <- rbind(X0,X1)
plot(DATA_Cpp, pch = 19, col = "blue", xlab = "X", ylab = "Y", font = 2, asp = 1)
kNN1 <- kNNdistplot(DATA_Cpp, k = 1)
# Write to CSV
write.csv(DATA_Cpp, "DataCpp30.csv")
S <- matrix(c(1,1,1,1),2,2)
mt1 <- c(0,0)
n1 <- 1000
X1 <- mvrnorm(n0, mt1, S)
plot(X1, pch = 19, col = "blue", xlab = "X", ylab = "Y", font = 2, asp = 1)
X1 <- mvrnorm(n1, mt1, S)
X2 <- mvrnorm(n2, mt2, S)
X3 <- mvrnorm(n3, mt3, S)
X4 <- mvrnorm(n4, mt4, S)
X5 <- mvrnorm(n5, mt5, S)
X6 <- mvrnorm(n6, mt6, S)
plot(X1, pch = 19, col = "blue", xlab = "X", ylab = "Y", font = 2, asp = 1)
S <- matrix(c(1,0,0,1),2,2)
X1 <- mvrnorm(n1, mt1, S)
plot(X1, pch = 19, col = "blue", xlab = "X", ylab = "Y", font = 2, asp = 1)
Tags <- as.data.frame(read.table("Cluste.csv", header=FALSE ,sep=","))
Tags <- as.data.frame(read.table("Cluster.csv", header=FALSE ,sep=","))
View(Tags)
Qindex_Tree <- as.data.frame(read.table("Dat120.csv", header=FALSE ,sep=","))
plot(Qindex_Tree)
Qindex_Tree[Qindex_Tree$V1 == 54 | Qindex_Tree$V1 == 62,]
Qindex_Tree[Qindex_Tree$V2 == 24,]
Data_Clu_Qin[Data_Clu_Qin$V3 != Data_Clu_Qin$V4,]
Data_Clu_Qin <- as.data.frame(read.table("Dat120.csv", header=FALSE ,sep=","))
Data_Clu_Qin[Data_Clu_Qin$V3 != Data_Clu_Qin$V4,]
Data_Clu_Qin[Data_Clu_Qin$V3 != Data_Clu_Qin$V5,]
# X <- seq(0.1,2, by=0.1)
# Y <- seq(0.1,1.05, by=0.05)
# R <- seq(0.1,2, by=0.1)
# X <- cbind(X, Y)
# X <- cbind(X, R)
# X <- as.data.frame(X)
#
gg_circle <- function(r, xc, yc, color="black", fill=NA, ...) {
x <- xc + r*cos(seq(0, pi, length.out=100))
ymax <- yc + r*sin(seq(0, pi, length.out=100))
ymin <- yc + r*sin(seq(0, -pi, length.out=100))
annotate("ribbon", x=x, ymin=ymin, ymax=ymax, color=color, fill=fill, ...)
}
# X <- seq(0.1,2, by=0.1)
# Y <- seq(0.1,1.05, by=0.05)
# R <- seq(0.1,2, by=0.1)
# X <- cbind(X, Y)
# X <- cbind(X, R)
# X <- as.data.frame(X)
#
gg_circle <- function(r, xc, yc, color="black", fill=NA, ...) {
x <- xc + r*cos(seq(0, pi, length.out=100))
ymax <- yc + r*sin(seq(0, pi, length.out=100))
ymin <- yc + r*sin(seq(0, -pi, length.out=100))
annotate("ribbon", x=x, ymin=ymin, ymax=ymax, color=color, fill=fill, ...)
}
library(tidyverse)
library(MASS)
# library(ggplot2)
library(ggforce)
library(dbscan)
library(igraph)
library(cowplot)
Data120 <- as.data.frame(read.table("Data_Clustered_120_0-5_4_0-9_0-9_Test.csv", header=FALSE,sep=","))
Tree1 <- as.data.frame(read.table("Tree1_120_0-5_4_0-9_0-9_Test.csv", header=TRUE ,sep=","))
Tree2 <- as.data.frame(read.table("Tree2_120_0-5_4_0-9_0-9_Test.csv", header=TRUE ,sep=","))
Cole <- c("red", "green", "blue", "violet", "gold")
Radi <- 0.5
cluster <- as.factor(Data120[,5])
square <- ggplot(Data120[,1:2], aes(x=V1, y=V2, colour= cluster)) + geom_point()
for(x in 1:length(Data120[,1])){
# square <- square + gg_circle(r=Tree1$Mediana[Tree1$VP.Index==x], xc=Data120[x,1], yc=Data120[x,2], color=, alpha=0.2)
# square <- square + gg_circle(r=Radi, xc=Data120[x,1], yc=Data120[x,2], color=Cole[cluster[x]], alpha=0.2)
}
show(square)
# ggsave("CPP-DBSCAN-VP_TREE-v1-GG.jpg", plot = square, device = "jpg",
#         width = 4000, height = 4000, scale = 1, limitsize = FALSE)
print("Rysunek Tree v1 - DONE")
Cole <- c("red", "green", "blue", "violet", "gold")
Radi <- 0.5
cluster <- as.factor(Data120[,5])
square <- ggplot(Data120[,1:2], aes(x=V1, y=V2, colour= cluster)) + geom_point()
for(x in 1:length(Data120[,1])){
square <- square + gg_circle(r=Tree1$Mediana[Tree1$VP.Index==x], xc=Data120[x,1], yc=Data120[x,2], color=, alpha=0.2)
# square <- square + gg_circle(r=Radi, xc=Data120[x,1], yc=Data120[x,2], color=Cole[cluster[x]], alpha=0.2)
}
show(square)
# ggsave("CPP-DBSCAN-VP_TREE-v1-GG.jpg", plot = square, device = "jpg",
#         width = 4000, height = 4000, scale = 1, limitsize = FALSE)
print("Rysunek Tree v1 - DONE")
Data120 <- as.data.frame(read.table("Data_Clustered_120_0-5_4_0-1_0-9_Test.csv", header=FALSE,sep=","))
Tree1 <- as.data.frame(read.table("Tree1_120_0-5_4_0-1_0-9_Test.csv", header=TRUE ,sep=","))
Tree2 <- as.data.frame(read.table("Tree2_120_0-5_4_0-1_0-9_Test.csv", header=TRUE ,sep=","))
Cole <- c("red", "green", "blue", "violet", "gold")
Radi <- 0.5
cluster <- as.factor(Data120[,5])
square <- ggplot(Data120[,1:2], aes(x=V1, y=V2, colour= cluster)) + geom_point()
for(x in 1:length(Data120[,1])){
square <- square + gg_circle(r=Tree1$Mediana[Tree1$VP.Index==x], xc=Data120[x,1], yc=Data120[x,2], color=, alpha=0.2)
# square <- square + gg_circle(r=Radi, xc=Data120[x,1], yc=Data120[x,2], color=Cole[cluster[x]], alpha=0.2)
}
show(square)
# ggsave("CPP-DBSCAN-VP_TREE-v1-GG.jpg", plot = square, device = "jpg",
#         width = 4000, height = 4000, scale = 1, limitsize = FALSE)
print("Rysunek Tree v1 - DONE")
View(Data120)
table(Data120[,3])
table(Data120[,4])
table(Data120[,5])
Cole <- c("red", "green", "blue", "violet", "gold")
Radi <- 0.5
cluster <- as.factor(Data120[,4])
square <- ggplot(Data120[,1:2], aes(x=V1, y=V2, colour= cluster)) + geom_point()
for(x in 1:length(Data120[,1])){
square <- square + gg_circle(r=Tree1$Mediana[Tree1$VP.Index==x], xc=Data120[x,1], yc=Data120[x,2], color=, alpha=0.2)
# square <- square + gg_circle(r=Radi, xc=Data120[x,1], yc=Data120[x,2], color=Cole[cluster[x]], alpha=0.2)
}
show(square)
# ggsave("CPP-DBSCAN-VP_TREE-v1-GG.jpg", plot = square, device = "jpg",
#         width = 4000, height = 4000, scale = 1, limitsize = FALSE)
print("Rysunek Tree v1 - DONE")
Cole <- c("red", "green", "blue", "violet", "gold")
Radi <- 0.5
cluster <- as.factor(Data120[,4])
square <- ggplot(Data120[,1:2], aes(x=V1, y=V2, colour= cluster)) + geom_point()
for(x in 1:length(Data120[,1])){
square <- square + gg_circle(r=Tree1$Mediana[Tree1$VP.Index==x], xc=Data120[x,1], yc=Data120[x,2], color=, alpha=0.2)
# square <- square + gg_circle(r=Radi, xc=Data120[x,1], yc=Data120[x,2], color=Cole[cluster[x]], alpha=0.2)
}
show(square)
# ggsave("CPP-DBSCAN-VP_TREE-v1-GG.jpg", plot = square, device = "jpg",
#         width = 4000, height = 4000, scale = 1, limitsize = FALSE)
print("Rysunek Tree v1 - DONE")
Data120 <- as.data.frame(read.table("Data_Clustered_120_0-5_4_0-9_0-9_Test.csv", header=FALSE,sep=","))
Tree1 <- as.data.frame(read.table("Tree1_120_0-5_4_0-9_0-9_Test.csv", header=TRUE ,sep=","))
Tree2 <- as.data.frame(read.table("Tree2_120_0-5_4_0-9_0-9_Test.csv", header=TRUE ,sep=","))
### --- TEST --- ###
Cole <- c("red", "green", "blue", "violet", "gold")
Radi <- 0.5
cluster <- as.factor(Data120[,4])
square <- ggplot(Data120[,1:2], aes(x=V1, y=V2, colour= cluster)) + geom_point()
for(x in 1:length(Data120[,1])){
square <- square + gg_circle(r=Tree1$Mediana[Tree1$VP.Index==x], xc=Data120[x,1], yc=Data120[x,2], color=, alpha=0.2)
# square <- square + gg_circle(r=Radi, xc=Data120[x,1], yc=Data120[x,2], color=Cole[cluster[x]], alpha=0.2)
}
show(square)
# ggsave("CPP-DBSCAN-VP_TREE-v1-GG.jpg", plot = square, device = "jpg",
#         width = 4000, height = 4000, scale = 1, limitsize = FALSE)
print("Rysunek Tree v1 - DONE")
table(Data120[,3])
table(Data120[,4])
table(Data120[,5])
Data120 <- as.data.frame(read.table("Dat_Clu_2000_Test.csv", header=FALSE ,sep=","))
table(Data120[,3])
table(Data120[,4])
table(Data120[,5])
Cole <- c("red", "green", "blue", "violet", "gold")
Radi <- 0.5
cluster <- as.factor(Data120[,4])
square <- ggplot(Data120[,1:2], aes(x=V1, y=V2, colour= cluster)) + geom_point()
for(x in 1:length(Data120[,1])){
# square <- square + gg_circle(r=Tree1$Mediana[Tree1$VP.Index==x], xc=Data120[x,1], yc=Data120[x,2], color=, alpha=0.2)
square <- square + gg_circle(r=Radi, xc=Data120[x,1], yc=Data120[x,2], color=Cole[cluster[x]], alpha=0.2)
}
show(square)
Data120 <- as.data.frame(read.table("Data_Good.csv", header=FALSE ,sep=","))
# X <- seq(0.1,2, by=0.1)
# Y <- seq(0.1,1.05, by=0.05)
# R <- seq(0.1,2, by=0.1)
# X <- cbind(X, Y)
# X <- cbind(X, R)
# X <- as.data.frame(X)
#
gg_circle <- function(r, xc, yc, color="black", fill=NA, ...) {
x <- xc + r*cos(seq(0, pi, length.out=100))
ymax <- yc + r*sin(seq(0, pi, length.out=100))
ymin <- yc + r*sin(seq(0, -pi, length.out=100))
annotate("ribbon", x=x, ymin=ymin, ymax=ymax, color=color, fill=fill, ...)
}
library(tidyverse)
library(MASS)
# library(ggplot2)
library(ggforce)
library(dbscan)
library(igraph)
library(cowplot)
install.packages("cowplot")
table(Data120[,3])
table(Data120[,4])
table(Data120[,5])
Data120 <- as.data.frame(read.table("Data_C_2000.csv", header=FALSE ,sep=","))
table(Data120[,3])
table(Data120[,4])
table(Data120[,5])
Data120 <- as.data.frame(read.table("Data_C1_2000.csv", header=FALSE ,sep=","))
table(Data120[,3])
table(Data120[,4])
table(Data120[,5])
Data120 <- as.data.frame(read.table("Data_C_20000.csv", header=FALSE ,sep=","))
table(Data120[,3])
table(Data120[,4])
table(Data120[,5])
Data120 <- as.data.frame(read.table("Data_C2_2000.csv", header=FALSE ,sep=","))
table(Data120[,3])
table(Data120[,4])
table(Data120[,5])
Data120 <- as.data.frame(read.table("Data_C3_2000.csv", header=FALSE ,sep=","))
table(Data120[,3])
table(Data120[,4])
table(Data120[,5])
Data120[Data120$V3 != Data120$V4,]
Data120 <- as.data.frame(read.table("Data_C3_2000.csv", header=FALSE ,sep=","))
table(Data120[,3])
table(Data120[,4])
table(Data120[,5])
Data120[Data120$V3 != Data120$V4,]
Data120 <- as.data.frame(read.table("Data_C3_2000.csv", header=FALSE ,sep=","))
table(Data120[,3])
table(Data120[,4])
table(Data120[,5])
Data120[Data120$V3 != Data120$V4,]
Data120 <- as.data.frame(read.table("Data_C3_2000.csv", header=FALSE ,sep=","))
table(Data120[,3])
table(Data120[,4])
table(Data120[,5])
Data120[Data120$V3 != Data120$V4,]
Data120 <- as.data.frame(read.table("Data_C3_2000.csv", header=FALSE ,sep=","))
table(Data120[,3])
table(Data120[,4])
table(Data120[,5])
Data120[Data120$V3 != Data120$V4,]
Data120 <- as.data.frame(read.table("Data_C1_6000.csv", header=FALSE ,sep=","))
table(Data120[,3])
table(Data120[,4])
table(Data120[,5])
Data120[Data120$V3 != Data120$V4,]
?graph.data.frame
actors <- data.frame(name=c("Alice", "Bob", "Cecil", "David",
"Esmeralda"),
age=c(48,33,45,34,21),
gender=c("F","M","F","M","F"))
relations <- data.frame(from=c("Bob", "Cecil", "Cecil", "David",
"David", "Esmeralda"),
to=c("Alice", "Bob", "Alice", "Alice", "Bob", "Alice"),
same.dept=c(FALSE,FALSE,TRUE,FALSE,FALSE,TRUE),
friendship=c(4,5,5,2,1,1), advice=c(4,5,5,4,2,3))
g <- graph_from_data_frame(relations, directed=TRUE, vertices=actors)
print(g, e=TRUE, v=TRUE)
## The opposite operation
as_data_frame(g, what="vertices")
as_data_frame(g, what="edges")
print(g, e=TRUE, v=TRUE)
plot(g, layout=lay)
lay = layout.reingold.tilford(g)
plot(g, layout=lay)
par(mar=rep(0,4), mfrow=c(1,2))
plot(g, layout=lay)
Qindex_Tree <- as.data.frame(read.table("Qindex-Tree.txt", header=FALSE ,sep=","))
dat <- data.frame(parent=Qindex_Tree$V2,
node=Qindex_Tree$V1,
# text=as.character(Tree1$VP.Index))
text=as.character(Tree1$L_kid_N+Tree1$R_kid_N))
g <- graph.data.frame(dat)
lay = layout.reingold.tilford(g)
par(mar=rep(0,4), mfrow=c(1,2))
plot(g, layout=lay)
View(Qindex_Tree)
Tree1 <- as.data.frame(read.table("Tree1_120.csv", header=TRUE ,sep=","))
View(Tree1)
dat <- data.frame(parent=Tree1$ID_Parent,
node=Tree2$ID,
# text=as.character(Tree1$VP.Index))
text=as.character(Tree1$L_kid_N+Tree1$R_kid_N))
g <- graph.data.frame(dat)
lay = layout.reingold.tilford(g)
par(mar=rep(0,4), mfrow=c(1,2))
plot(g, layout=lay)
dat <- data.frame(parent=Tree1$ID_Parent,
node=Tree1$ID,
# text=as.character(Tree1$VP.Index))
text=as.character(Tree1$L_kid_N+Tree1$R_kid_N))
g <- graph.data.frame(dat)
lay = layout.reingold.tilford(g)
par(mar=rep(0,4), mfrow=c(1,2))
plot(g, layout=lay)
?layout.reingold.tilford
lay = layout.auto(g)
par(mar=rep(0,4), mfrow=c(1,2))
plot(g, layout=lay)
par(mar=rep(0,6), mfrow=c(2,2))
par(mar=rep(0,3), mfrow=c(1,2))
par(mar=rep(0,4), mfrow=c(1,2))
plot(g, layout=lay)
lay = layout.circle(g)
par(mar=rep(0,4), mfrow=c(1,2))
plot(g, layout=lay)
lay = layout.davidson.harel(g)
par(mar=rep(0,4), mfrow=c(1,2))
plot(g, layout=lay)
Data120 <- as.data.frame(read.table("Data_C1_6000.csv", header=FALSE ,sep=","))
View(Data120)
Tree1[85,]
Data120[6,]
Data120[18,]
Data120 <- as.data.frame(read.table("Dat120.csv", header=FALSE ,sep=","))
table(Data120[,3])
table(Data120[,4])
table(Data120[,5])
Data120 <- as.data.frame(read.table("Data_C1_60001.csv", header=FALSE ,sep=","))
table(Data120[,3])
table(Data120[,4])
table(Data120[,5])
Data120 <- as.data.frame(read.table("Data_C1_60002.csv", header=FALSE ,sep=","))
table(Data120[,3])
table(Data120[,4])
table(Data120[,5])
Data120 <- as.data.frame(read.table("Data_C1_60003.csv", header=FALSE ,sep=","))
table(Data120[,3])
table(Data120[,4])
table(Data120[,5])
Data120 <- as.data.frame(read.table("Data_C1_60004.csv", header=FALSE ,sep=","))
table(Data120[,3])
table(Data120[,4])
table(Data120[,5])
Data120 <- as.data.frame(read.table("Data_C1_60005.csv", header=FALSE ,sep=","))
table(Data120[,3])
table(Data120[,4])
table(Data120[,5])
Data120 <- as.data.frame(read.table("Data_C1_60006.csv", header=FALSE ,sep=","))
table(Data120[,3])
table(Data120[,4])
table(Data120[,5])
Data120[Data120$V4 == 2]
Data120[Data120$V4 == 2,]
Data120 <- as.data.frame(read.table("DataCpp-2D-6000.csv", header=FALSE ,sep=","))
View(Data120)
Data120 <- as.data.frame(read.table("DataCpp-2D-6000.csv", header=TRUE ,sep=","))
View(Data120)
plot(Data120[,2:3])
