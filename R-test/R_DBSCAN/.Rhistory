kappa <- cbind(y)
x <- c(0,1,5)
y <- c(0,1,5)
kappa <- as.data.frame(x)
kappa <- cbind(y)
kappa <- as.data.frame(x)
kappa <- cbind(kappa,y)
View(kappa)
sp1 <- ggplot(kappa, aes(x=x, y=y)) + geom_point() + coord_fixed(ratio = 1) + geom_point(size=10, pch=1)
show(sp1)
x <- c(0,1,5)
y <- c(0,1,3)
kappa <- as.data.frame(x)
kappa <- cbind(kappa,y)
sp1 <- ggplot(kappa, aes(x=x, y=y)) + geom_point() + coord_fixed(ratio = 1) + geom_point(size=10, pch=1)
show(sp1)
sp1 <- ggplot(kappa, aes(x=x, y=y)) + geom_point() + coord_fixed(ratio = 1) + geom_point(size=100, pch=1)
show(sp1)
sp1 <- ggplot(kappa, aes(x=x, y=y)) + geom_point() + coord_fixed(ratio = 1) + geom_point(pch=1, size=100)
show(sp1)
install.packages("ggforce")
library(ggplot2)
library(ggforce)
x <- c(0,1,5)
y <- c(0,1,3)
kappa <- as.data.frame(x)
kappa <- cbind(kappa,y)
sp1 <- ggplot(kappa, aes(x=x, y=y)) + geom_point() + coord_fixed(ratio = 1) + geom_point(pch=1, size=100)
show(sp1)
sp1 <- ggplot(kappa, aes(x=x, y=y)) + geom_point() + coord_fixed(ratio = 1) + geom_point(pch=1)
show(sp1)
sp1 <- ggplot(kappa, aes(x=x, y=y)) + geom_point() + coord_fixed(ratio = 1) + geom_circle(x=x,x=y,r=1)
show(sp1)
sp1 <- ggplot(kappa, aes(x=x, y=y)) + geom_point() + coord_fixed(ratio = 1) + geom_circle(x0=x,y0=y,r=1)
show(sp1)
sp1 <- ggplot(kappa, aes(x=x, y=y)) + geom_point() + coord_fixed(ratio = 1) + geom_circle(aes(x0=x, y0=y, r= 1), data= kappa))
sp1 <- ggplot(kappa, aes(x=x, y=y)) + geom_point() + coord_fixed(ratio = 1) + geom_circle(aes(x0=x, y0=y, r= 1), data= kappa)
show(sp1)
sp1 <- ggplot(kappa, aes(x=x, y=y)) + geom_point() + coord_fixed(ratio = 1) + geom_circle(aes(x0=kappa$x, y0=kappa$y, r= 10), data= kappa)
show(sp1)
gc()
rm(list = ls())         # Clear Environment
gc()                    # Free up memrory and report the memory usage.
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
Dane <- as.data.frame(read.table("DataCpp-2D-1000.csv", header=FALSE,sep=","))
Dane <- as.data.frame(read.table("DataCpp-2D-1000.csv", header=TRUE,sep=","))
Dane <- Dane[,1:]
Dane <- Dane[[,1:]]
Dane <- Dane[1]
Dane <- as.data.frame(read.table("DataCpp-2D-1000.csv", header=TRUE,sep=","))
Dane <- Dane[:,1:]
Dane <- Dane[-"X"]
Dane <- Dane[1:30]
Dane <- Dane[1:30,2]
Dane <- Dane[1:30,1:]
Dane <- Dane[1:30,1:ncol(Dane)]
Dane <- Dane[-Dane$X]
Dane <- as.data.frame(read.table("DataCpp-2D-1000.csv", header=TRUE,sep=","))
Dane <- Dane[-Dane$X]
View(Dane)
Dane <- as.data.frame(read.table("DataCpp-2D-1000.csv", header=TRUE,sep=","))
Dane <- Dane[Dane$X]
Dane <- Dane[,-Dane$X]
Dane <- as.data.frame(read.table("DataCpp-2D-1000.csv", header=TRUE,sep=","))
Dane <- Dane[1:nrow(Dane),-Dane$X]
Dane <- as.data.frame(read.table("DataCpp-2D-1000.csv", header=TRUE,sep=","))
Dane <- Dane[1:nrow(Dane),1:ncol(Dane)]
Dane <- Dane[1:nrow(Dane),2:ncol(Dane)]
Dane <- colnames(x = Dane, c("x","y"))
Dane <- colnames(x = Dane, c(x,y))
Dane <- colnames(x = Dane, c("x","y"))
colnames(Dane) <- c("x", "y")
P <- sample (Dane, size=100, replace =F)
?dist
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
P <- Dane[sample(nrow(Dane), 10, replace = F), ]
View(P)
View(Dane)
best_spread <- 0
best_p <- 0
D <- P[sample(nrow(P), 3, replace = F), ]
dist_all <- NULL
for(i in 1:nrow(D)) dist_all[i] <- euc.dist(p, D[i,])
for(i in 1:nrow(D)) dist_all[i] <- euc.dist(P[1], D[i,])
for(i in 1:nrow(D)) dist_all[i] <- euc.dist(P[1,], D[i,])
mu <- median(dist_all)
spread_temp <- var(dist_all - mu)
show("MU = " + mu)
show("MU = ", mu)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
View(node.p)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
View(node.p)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
Data_Cluster <- as.data.frame(read.table("DataCpp.csv", header=FALSE,sep=","))
Data_Cluster <- as.data.frame(read.table("DataCpp.csv", header=FALSE,sep=","))
plot(Data_Cluster)
plot(Data_Cluster, ylim = c(-5,5), xlim = c(-2,10), pch = 19, col = "blue", xlab = "X", ylab = "Y", font = 2, asp = 1)
plot(x=Data_Cluster$V2,y=Data_Cluster$V3 , ylim = c(-5,5), xlim = c(-2,10), pch = 19, col = "blue", xlab = "X", ylab = "Y", font = 2, asp = 1)
Data_Cluster <- as.data.frame(read.table("Data_Clustered_S.csv", header=FALSE,sep=","))
cluster <- as.factor(Data_Cluster[,3])
library(ggplot2)
library(ggforce)
sp <- ggplot(Data_Cluster[,1:2], aes(x=V1, y=V2, colour = cluster)) + geom_point() + scale_x_continuous() + scale_y_continuous() #+ theme(aspect.ratio = 1)
sp <- sp + coord_fixed(ratio = 1)
sp <- sp + geom_point(size=10, pch=1) #+ coord_cartesian(xlim = c(0,4), ylim = c(0,4))
show(sp)
x <- c(0,1,5)
y <- c(0,1,3)
kappa <- as.data.frame(x)
kappa <- cbind(kappa,y)
sp1 <- ggplot(kappa, aes(x=x, y=y)) + geom_point() + coord_fixed(ratio = 1) + geom_circle(aes(x0=x, y0=y, r= 10), data= kappa)
show(sp1)
sp1 <- ggplot(kappa, aes(x=x, y=y)) + geom_point() + coord_fixed(ratio = 1) + geom_circle(aes(x0=x, y0=y, r= 10), data= kappa)
install.packages("ggforce")
library(ggplot2)
library(ggforce)
x <- c(0,1,5)
y <- c(0,1,3)
kappa <- as.data.frame(x)
kappa <- cbind(kappa,y)
sp1 <- ggplot(kappa, aes(x=x, y=y)) + geom_point() + coord_fixed(ratio = 1) + geom_circle(aes(x0=x, y0=y, r= 10), data= kappa)
show(sp1)
sp <- ggplot(Data_Cluster[,1:2], aes(x=V1, y=V2, colour = cluster)) + geom_point() + scale_x_continuous() + scale_y_continuous() #+ theme(aspect.ratio = 1)
sp <- sp + coord_fixed(ratio = 1)
sp <- sp + geom_point(size=10, pch=1) #+ coord_cartesian(xlim = c(0,4), ylim = c(0,4))
show(sp)
sp <- ggplot(Data_Cluster[63,1:2], aes(x=V1, y=V2, colour = 'b')) + geom_point() + scale_x_continuous() + scale_y_continuous() #+ theme(aspect.ratio = 1)
show(sp)
sp <- ggplot(Data_Cluster[,1:2], aes(x=V1, y=V2, colour = cluster)) + geom_point() + scale_x_continuous() + scale_y_continuous() #+ theme(aspect.ratio = 1)
sp <- sp + coord_fixed(ratio = 1)
sp <- sp + geom_point(size=10, pch=1) #+ coord_cartesian(xlim = c(0,4), ylim = c(0,4))
show(sp)
sp <- sp + geom_point(aes(x=Data_Cluster[63,1], y=Data_Cluster[63,2], colour = 'b'))
show(sp)
sp <- sp + geom_point(aes(x=Data_Cluster[63,1], y=Data_Cluster[63,2], colour = 'k'))
show(sp)
sp <- sp + geom_point(aes(x=Data_Cluster[63,1], y=Data_Cluster[63,2], colour = 'black'))
show(sp)
sp <- ggplot(Data_Cluster[,1:2], aes(x=V1, y=V2, colour = cluster)) + geom_point() + scale_x_continuous() + scale_y_continuous() #+ theme(aspect.ratio = 1)
sp <- sp + coord_fixed(ratio = 1)
sp <- sp + geom_point(size=10, pch=1) #+ coord_cartesian(xlim = c(0,4), ylim = c(0,4))
#sp <- sp + geom_point(aes(x=Data_Cluster[63,1], y=Data_Cluster[63,2], colour = 'black'))
show(sp)
sp <- sp + geom_point(aes(x=Data_Cluster[P_tab,1], y=Data_Cluster[P_tab,2], colour = 'gold'))
#sp <- sp + geom_point(aes(x=Data_Cluster[63,1], y=Data_Cluster[63,2], colour = 'black'))
show(sp)
P_tab = c(0,2,10,15,16,18,19,22,23,24,30,34,45,59,61,63,64,79,86,94,97,100,102,107)
sp <- sp + geom_point(aes(x=Data_Cluster[P_tab,1], y=Data_Cluster[P_tab,2], colour = 'gold'))
#sp <- sp + geom_point(aes(x=Data_Cluster[63,1], y=Data_Cluster[63,2], colour = 'black'))
show(sp)
Data_Cluster <- as.data.frame(read.table("Data_Clustered_S.csv", header=FALSE,sep=","))
cluster <- as.factor(Data_Cluster[,3])
library(ggplot2)
library(ggforce)
sp <- ggplot(Data_Cluster[,1:2], aes(x=V1, y=V2, colour = cluster)) + geom_point() + scale_x_continuous() + scale_y_continuous() #+ theme(aspect.ratio = 1)
sp <- sp + coord_fixed(ratio = 1)
sp <- sp + geom_point(size=10, pch=1) #+ coord_cartesian(xlim = c(0,4), ylim = c(0,4))
#sp <- sp + geom_point(aes(x=Data_Cluster[63,1], y=Data_Cluster[63,2], colour = 'black'))
show(sp)
P_tab = c(0,2,10,15,16,18,19,22,23,24,30,34,45,59,61,63,64,79,86,94,97,100,102,107)
for (zz in P_tab){
sp <- sp + geom_point(aes(x=Data_Cluster[zz,1], y=Data_Cluster[zz,2], colour = 'gold'))
}
#sp <- sp + geom_point(aes(x=Data_Cluster[63,1], y=Data_Cluster[63,2], colour = 'black'))
show(sp)
sp <- ggplot(Data_Cluster[,1:2], aes(x=V1, y=V2, colour = cluster)) + geom_point() + scale_x_continuous() + scale_y_continuous() #+ theme(aspect.ratio = 1)
sp <- sp + coord_fixed(ratio = 1)
sp <- sp + geom_point(size=10, pch=1) #+ coord_cartesian(xlim = c(0,4), ylim = c(0,4))
for (zz in P_tab){
sp <- sp + geom_point(aes(x=Data_Cluster[zz,1], y=Data_Cluster[zz,2], colour = 'gold'))
}
#sp <- sp + geom_point(aes(x=Data_Cluster[63,1], y=Data_Cluster[63,2], colour = 'black'))
show(sp)
sp <- sp + geom_point(aes(x=Data_Cluster[zz,1], y=Data_Cluster[zz,2], colour = 'yellow'))
#sp <- sp + geom_point(aes(x=Data_Cluster[63,1], y=Data_Cluster[63,2], colour = 'black'))
show(sp)
sp <- ggplot(Data_Cluster[,1:2], aes(x=V1, y=V2, colour = cluster)) + geom_point() + scale_x_continuous() + scale_y_continuous() #+ theme(aspect.ratio = 1)
sp <- sp + coord_fixed(ratio = 1)
sp <- sp + geom_point(size=10, pch=1) #+ coord_cartesian(xlim = c(0,4), ylim = c(0,4))
#sp <- sp + geom_point(aes(x=Data_Cluster[63,1], y=Data_Cluster[63,2], colour = 'black'))
show(sp)
P_tab = c(0,2,10,15,16,18,19,22,23,24,30,34,45,59,61,63,64,79,86,94,97,100,102,107)
for (zz in P_tab){
sp <- sp + geom_point(aes(x=Data_Cluster[zz,1], y=Data_Cluster[zz,2], colour = 'yellow'))
}
#sp <- sp + geom_point(aes(x=Data_Cluster[63,1], y=Data_Cluster[63,2], colour = 'black'))
show(sp)
for (zz in P_tab){
sp <- sp + geom_point(aes(x=Data_Cluster[zz,1], y=Data_Cluster[zz,2], colour = 'y'))
}
#sp <- sp + geom_point(aes(x=Data_Cluster[63,1], y=Data_Cluster[63,2], colour = 'black'))
show(sp)
sp <- ggplot(Data_Cluster[,1:2], aes(x=V1, y=V2)) + geom_point() + scale_x_continuous() + scale_y_continuous() #+ theme(aspect.ratio = 1)
sp <- sp + coord_fixed(ratio = 1)
sp <- sp + geom_point(size=10, pch=1) #+ coord_cartesian(xlim = c(0,4), ylim = c(0,4))
P_tab = c(0,2,10,15,16,18,19,22,23,24,30,34,45,59,61,63,64,79,86,94,97,100,102,107)
for (zz in P_tab){
sp <- sp + geom_point(aes(x=Data_Cluster[zz,1], y=Data_Cluster[zz,2], colour = 'y'))
}
#sp <- sp + geom_point(aes(x=Data_Cluster[63,1], y=Data_Cluster[63,2], colour = 'black'))
show(sp)
sp <- ggplot(Data_Cluster[,1:2], aes(x=V1, y=V2, colour = cluster)) + geom_point() + scale_x_continuous() + scale_y_continuous() #+ theme(aspect.ratio = 1)
sp <- sp + coord_fixed(ratio = 1)
sp <- sp + geom_point(size=10, pch=1) #+ coord_cartesian(xlim = c(0,4), ylim = c(0,4))
P_tab = c(0,2,10,15,16,18,19,22,23,24,30,34,45,59,61,63,64,79,86,94,97,100,102,107)
for (zz in 1:length(P_tab)){
sp <- sp + geom_point(aes(x=Data_Cluster[zz,1], y=Data_Cluster[zz,2], colour = 'y'))
}
#sp <- sp + geom_point(aes(x=Data_Cluster[63,1], y=Data_Cluster[63,2], colour = 'black'))
show(sp)
sp <- ggplot(Data_Cluster[,1:2], aes(x=V1, y=V2, colour = cluster)) + geom_point() + scale_x_continuous() + scale_y_continuous() #+ theme(aspect.ratio = 1)
sp <- sp + coord_fixed(ratio = 1)
sp <- sp + geom_point(size=10, pch=1) #+ coord_cartesian(xlim = c(0,4), ylim = c(0,4))
P_tab = c(0,2,10,15,16,18,19,22,23,24,30,34,45,59,61,63,64,79,86,94,97,100,102,107)
for (zz in 1:length(P_tab)){
sp <- sp + geom_point(aes(x=Data_Cluster[zz,1], y=Data_Cluster[zz,2], colour = 'y'))
sp <- sp + geom_point(size=10, pch=1)
}
#sp <- sp + geom_point(aes(x=Data_Cluster[63,1], y=Data_Cluster[63,2], colour = 'black'))
show(sp)
sp <- ggplot(Data_Cluster[,1:2], aes(x=V1, y=V2, colour = cluster)) + geom_point() + scale_x_continuous() + scale_y_continuous() #+ theme(aspect.ratio = 1)
sp <- sp + coord_fixed(ratio = 1)
sp <- sp + geom_point(size=10, pch=1) #+ coord_cartesian(xlim = c(0,4), ylim = c(0,4))
P_tab = c(0,2,10,15,16,18,19,22,23,24,30,34,45,59,61,63,64,79,86,94,97,100,102,107)
for (zz in 1:length(P_tab)){
sp <- sp + geom_point(aes(x=Data_Cluster[P_tab[zz],1], y=Data_Cluster[P_tab[zz],2], colour = 'y'))
sp <- sp + geom_point(size=10, pch=1)
}
#sp <- sp + geom_point(aes(x=Data_Cluster[63,1], y=Data_Cluster[63,2], colour = 'black'))
show(sp)
for (zz in 1:length(P_tab)){
sp <- sp + geom_point(aes(x=Data_Cluster[P_tab[zz],1], y=Data_Cluster[P_tab[zz],2], colour = 'yellow'))
sp <- sp + geom_point(size=10, pch=1)
}
#sp <- sp + geom_point(aes(x=Data_Cluster[63,1], y=Data_Cluster[63,2], colour = 'black'))
show(sp)
sp <- sp + geom_point(aes(x=Data_Cluster[0,1], y=Data_Cluster[0,2], colour = 'yellow'))
#sp <- sp + geom_point(aes(x=Data_Cluster[63,1], y=Data_Cluster[63,2], colour = 'black'))
show(sp)
sp <- sp + geom_point(aes(x=Data_Cluster[1,1], y=Data_Cluster[1,2], colour = 'yellow'))
#sp <- sp + geom_point(aes(x=Data_Cluster[63,1], y=Data_Cluster[63,2], colour = 'black'))
show(sp)
kappa = P_tab[zz]
sp <- sp + geom_point(aes(x=Data_Cluster[P_tab[zz],1], y=Data_Cluster[P_tab[zz],2], colour = 'yellow'))
sp <- sp + geom_point(size=10, pch=1)
#sp <- sp + geom_point(aes(x=Data_Cluster[63,1], y=Data_Cluster[63,2], colour = 'black'))
show(sp)
P_tab = c(0,2,10,15,16,18,19,22,23,24,30,34,45,59,61,63,64,79,86,94,97,100,102,107)
for (zz in 1:length(P_tab)){
kappa = P_tab[zz]
sp <- sp + geom_point(aes(x=Data_Cluster[P_tab[zz],1], y=Data_Cluster[P_tab[zz],2], colour = 'yellow'))
sp <- sp + geom_point(size=10, pch=1)
}
#sp <- sp + geom_point(aes(x=Data_Cluster[63,1], y=Data_Cluster[63,2], colour = 'black'))
show(sp)
library(readr)
library(tidyverse)
library(dbscan)
###################################################################################
# Plot some data for C++ project
library(MASS)
S <- matrix(c(1,0,0,1),2,2)
mt1 <- c(5,5)
mt2 <- c(0,0)
n1 <- 1000
n2 <- 1000
n <- n1 + n2
X1 <- mvrnorm(n1, mt1, S)
X2 <- mvrnorm(n2, mt2, S)
DATA_Cpp <- rbind(X1, X2)
# Write to CSV
write.csv(DATA_Cpp, "DataCpp-2D-1000.csv")
plot(X1, ylim = c(-5,5), xlim = c(-2,10), pch = 19, col = "blue", xlab = "X", ylab = "Y", font = 2, asp = 1)
plot(X1, pch = 19, col = "blue", xlab = "X", ylab = "Y", font = 2, asp = 1)
abline(v = 0, h = 0, col = "gray")
points(X2, pch = 19, col = "orange")
plot(X1, ylim = c(-5,5), xlim = c(-5,10), pch = 19, col = "blue", xlab = "X", ylab = "Y", font = 2, asp = 1)
abline(v = 0, h = 0, col = "gray")
points(X2, pch = 19, col = "orange")
plot(X1, ylim = c(-5,10), xlim = c(-5,10), pch = 19, col = "blue", xlab = "X", ylab = "Y", font = 2, asp = 1)
abline(v = 0, h = 0, col = "gray")
points(X2, pch = 19, col = "orange")
View(DATA_Cpp)
kNN1 <- kNNdistplot(DATA_Cpp, k = 5)
abline(h=.5, col = "red", lty=2)
abline(h=.1, col = "red", lty=2)
abline(h=.2, col = "red", lty=2)
abline(h=.3, col = "red", lty=2)
abline(h=.4, col = "red", lty=2)
abline(h=.5, col = "red", lty=2)
View(X1)
### Visualization
Data_Cluster <- as.data.frame(read.table("Clustered-2D-2000-Eps-0-3_N-5_Rand-0-2.csv", header=FALSE,sep=","))
### Visualization
Data_Cluster <- as.data.frame(read.table("Clustered-2D-2000-Eps-0-3_N-5_Rand-0-2.csv", header=FALSE,sep=","))
cluster <- as.factor(Data_Cluster[,3])
cluster2 <- as.factor(Data_Cluster[,4])
library(ggplot2)
library(ggforce)
sp <- ggplot(Data_Cluster[,1:2], aes(x=V1, y=V2, colour = cluster)) + geom_point() + scale_x_continuous() + scale_y_continuous() #+ theme(aspect.ratio = 1)
sp <- sp + coord_fixed(ratio = 1)
sp <- sp + geom_point(size=10, pch=1) #+ coord_cartesian(xlim = c(0,4), ylim = c(0,4))
#sp <- sp + geom_point(aes(x=Data_Cluster[63,1], y=Data_Cluster[63,2], colour = 'black'))
show(sp)
sp <- ggplot(Data_Cluster[,1:2], aes(x=V1, y=V2, colour = cluster2)) + geom_point() + scale_x_continuous() + scale_y_continuous() #+ theme(aspect.ratio = 1)
sp <- sp + coord_fixed(ratio = 1)
sp <- sp + geom_point(size=10, pch=1) #+ coord_cartesian(xlim = c(0,4), ylim = c(0,4))
#sp <- sp + geom_point(aes(x=Data_Cluster[63,1], y=Data_Cluster[63,2], colour = 'black'))
show(sp)
Data_Cluster <- as.data.frame(read.table("Clustered_Test.csv", header=FALSE,sep=","))
cluster <- as.factor(Data_Cluster[,3])
cluster2 <- as.factor(Data_Cluster[,4])
library(ggplot2)
library(ggforce)
sp <- ggplot(Data_Cluster[,1:2], aes(x=V1, y=V2, colour = cluster2)) + geom_point() + scale_x_continuous() + scale_y_continuous() #+ theme(aspect.ratio = 1)
sp <- sp + coord_fixed(ratio = 1)
sp <- sp + geom_point(size=10, pch=1) #+ coord_cartesian(xlim = c(0,4), ylim = c(0,4))
#sp <- sp + geom_point(aes(x=Data_Cluster[63,1], y=Data_Cluster[63,2], colour = 'black'))
show(sp)
sp <- ggplot(Data_Cluster[,1:2], aes(x=V1, y=V2, colour = cluster)) + geom_point() + scale_x_continuous() + scale_y_continuous() #+ theme(aspect.ratio = 1)
sp <- sp + coord_fixed(ratio = 1)
sp <- sp + geom_point(size=10, pch=1) #+ coord_cartesian(xlim = c(0,4), ylim = c(0,4))
#sp <- sp + geom_point(aes(x=Data_Cluster[63,1], y=Data_Cluster[63,2], colour = 'black'))
show(sp)
Data_Cluster <- as.data.frame(read.table("Clustered_Test.csv", header=FALSE,sep=","))
cluster <- as.factor(Data_Cluster[,3])
library(ggplot2)
library(ggforce)
sp <- ggplot(Data_Cluster[,1:2], aes(x=V1, y=V2, colour = cluster)) + geom_point() + scale_x_continuous() + scale_y_continuous() #+ theme(aspect.ratio = 1)
sp <- sp + coord_fixed(ratio = 1)
sp <- sp + geom_point(size=10, pch=1) #+ coord_cartesian(xlim = c(0,4), ylim = c(0,4))
#sp <- sp + geom_point(aes(x=Data_Cluster[63,1], y=Data_Cluster[63,2], colour = 'black'))
show(sp)
Data_Cluster <- as.data.frame(read.table("Clustered_Test.csv", header=FALSE,sep=","))
cluster2 <- as.factor(Data_Cluster[,4])
library(ggplot2)
library(ggforce)
sp <- ggplot(Data_Cluster[,1:2], aes(x=V1, y=V2, colour = cluster)) + geom_point() + scale_x_continuous() + scale_y_continuous() #+ theme(aspect.ratio = 1)
sp <- sp + coord_fixed(ratio = 1)
sp <- sp + geom_point(size=10, pch=1) #+ coord_cartesian(xlim = c(0,4), ylim = c(0,4))
#sp <- sp + geom_point(aes(x=Data_Cluster[63,1], y=Data_Cluster[63,2], colour = 'black'))
show(sp)
sp <- ggplot(Data_Cluster[,1:2], aes(x=V1, y=V2, colour = cluster2)) + geom_point() + scale_x_continuous() + scale_y_continuous() #+ theme(aspect.ratio = 1)
sp <- sp + coord_fixed(ratio = 1)
sp <- sp + geom_point(size=10, pch=1) #+ coord_cartesian(xlim = c(0,4), ylim = c(0,4))
#sp <- sp + geom_point(aes(x=Data_Cluster[63,1], y=Data_Cluster[63,2], colour = 'black'))
show(sp)
Data_Cluster <- as.data.frame(read.table("Clustered_Test.csv", header=FALSE,sep=","))
cluster2 <- as.factor(Data_Cluster[,4])
library(ggplot2)
library(ggforce)
sp <- ggplot(Data_Cluster[,1:2], aes(x=V1, y=V2, colour = cluster2)) + geom_point() + scale_x_continuous() + scale_y_continuous() #+ theme(aspect.ratio = 1)
sp <- sp + coord_fixed(ratio = 1)
sp <- sp + geom_point(size=10, pch=1) #+ coord_cartesian(xlim = c(0,4), ylim = c(0,4))
#sp <- sp + geom_point(aes(x=Data_Cluster[63,1], y=Data_Cluster[63,2], colour = 'black'))
show(sp)
Data_Cluster <- as.data.frame(read.table("Clustered_Test.csv", header=FALSE,sep=","))
cluster2 <- as.factor(Data_Cluster[,4])
library(ggplot2)
library(ggforce)
sp <- ggplot(Data_Cluster[,1:2], aes(x=V1, y=V2, colour = cluster2)) + geom_point() + scale_x_continuous() + scale_y_continuous() #+ theme(aspect.ratio = 1)
sp <- sp + coord_fixed(ratio = 1)
sp <- sp + geom_point(size=10, pch=1) #+ coord_cartesian(xlim = c(0,4), ylim = c(0,4))
#sp <- sp + geom_point(aes(x=Data_Cluster[63,1], y=Data_Cluster[63,2], colour = 'black'))
show(sp)
### Visualization
Data_Cluster <- as.data.frame(read.table("Clustered_1.csv", header=FALSE,sep=","))
### Visualization
Data_Cluster <- as.data.frame(read.table("Clustered_1.csv", header=FALSE,sep=","))
cluster <- as.factor(Data_Cluster[,3])
cluster2 <- as.factor(Data_Cluster[,4])
cluster3 <- as.factor(Data_Cluster[,5])
library(ggplot2)
library(ggforce)
sp <- ggplot(Data_Cluster[,1:2], aes(x=V1, y=V2, colour = cluster)) + geom_point() + scale_x_continuous() + scale_y_continuous() #+ theme(aspect.ratio = 1)
sp <- sp + coord_fixed(ratio = 1)
sp <- sp + geom_point(size=10, pch=1) #+ coord_cartesian(xlim = c(0,4), ylim = c(0,4))
#sp <- sp + geom_point(aes(x=Data_Cluster[63,1], y=Data_Cluster[63,2], colour = 'black'))
show(sp)
sp <- ggplot(Data_Cluster[,1:2], aes(x=V1, y=V2, colour = cluster2)) + geom_point() + scale_x_continuous() + scale_y_continuous() #+ theme(aspect.ratio = 1)
sp <- sp + coord_fixed(ratio = 1)
sp <- sp + geom_point(size=10, pch=1) #+ coord_cartesian(xlim = c(0,4), ylim = c(0,4))
#sp <- sp + geom_point(aes(x=Data_Cluster[63,1], y=Data_Cluster[63,2], colour = 'black'))
show(sp)
sp <- ggplot(Data_Cluster[,1:2], aes(x=V1, y=V2, colour = cluster3)) + geom_point() + scale_x_continuous() + scale_y_continuous() #+ theme(aspect.ratio = 1)
sp <- sp + coord_fixed(ratio = 1)
sp <- sp + geom_point(size=10, pch=1) #+ coord_cartesian(xlim = c(0,4), ylim = c(0,4))
#sp <- sp + geom_point(aes(x=Data_Cluster[63,1], y=Data_Cluster[63,2], colour = 'black'))
show(sp)
if(cluster != cluster2 || cluster2 != cluster3 || cluster != cluster3){
print("\d | \d | \d", cluster, cluster2, cluster3)
}
if(cluster != cluster2 || cluster2 != cluster3 || cluster != cluster3){
print("%d | %d | %d", cluster, cluster2, cluster3)
}
for (x in c(1:length(Data_Cluster[,3]))) {
if(Data_Cluster[,3] != Data_Cluster[,4] || Data_Cluster[,4] != Data_Cluster[,5] || Data_Cluster[,3] != Data_Cluster[,5]){
print("%d | %d | %d", cluster, cluster2, cluster3)
}
}
for (x in c(1:length(Data_Cluster[,3]))) {
if(Data_Cluster[x,3] != Data_Cluster[x,4] || Data_Cluster[x,4] != Data_Cluster[x,5] || Data_Cluster[x,3] != Data_Cluster[x,5]){
print("%d | %d | %d", cluster, cluster2, cluster3)
}
}
for (x in c(1:length(Data_Cluster[,3]))) {
if(Data_Cluster[x,3] != Data_Cluster[x,4] || Data_Cluster[x,4] != Data_Cluster[x,5] || Data_Cluster[x,3] != Data_Cluster[x,5]){
print("%d | %d | %d", Data_Cluster[x,3], Data_Cluster[x,4], Data_Cluster[x,5])
}
}
?print
for (x in c(1:length(Data_Cluster[,3]))) {
if(Data_Cluster[x,3] != Data_Cluster[x,4] || Data_Cluster[x,4] != Data_Cluster[x,5] || Data_Cluster[x,3] != Data_Cluster[x,5]){
cat("%d | %d | %d", Data_Cluster[x,3], Data_Cluster[x,4], Data_Cluster[x,5])
}
}
for (x in c(1:length(Data_Cluster[,3]))) {
if(Data_Cluster[x,3] != Data_Cluster[x,4] || Data_Cluster[x,4] != Data_Cluster[x,5] || Data_Cluster[x,3] != Data_Cluster[x,5]){
cat(Data_Cluster[x,3], " | ", Data_Cluster[x,4], " | ", Data_Cluster[x,5])
}
}
for (x in c(1:length(Data_Cluster[,3]))) {
if(Data_Cluster[x,3] != Data_Cluster[x,4] || Data_Cluster[x,4] != Data_Cluster[x,5] || Data_Cluster[x,3] != Data_Cluster[x,5]){
cat(Data_Cluster[x,3], " | ", Data_Cluster[x,4], " | ", Data_Cluster[x,5], "\n")
}
}
library(readr)
library(tidyverse)
library(dbscan)
library(MASS)
S <- matrix(c(1,0,0,1),2,2)
mt1 <- c(5,5)
mt2 <- c(0,0)
n1 <- 1000
n2 <- 1000
n <- n1 + n2
X1 <- mvrnorm(n1, mt1, S)
X2 <- mvrnorm(n2, mt2, S)
DATA_Cpp <- rbind(X1, X2)
kNN1 <- kNNdistplot(DATA_Cpp, k = 5)
abline(h=.1, col = "red", lty=2)
abline(h=.2, col = "red", lty=2)
abline(h=.3, col = "red", lty=2)
abline(h=.4, col = "red", lty=2)
abline(h=.5, col = "red", lty=2)
plot(X1, ylim = c(-5,10), xlim = c(-5,10), pch = 19, col = "blue", xlab = "X", ylab = "Y", font = 2, asp = 1)
abline(v = 0, h = 0, col = "gray")
points(X2, pch = 19, col = "orange")
S <- matrix(c(1,0,0,1),2,2)
mt1 <- c(10,10)
mt2 <- c(0,0)
n1 <- 10000
n2 <- 10000
n <- n1 + n2
X1 <- mvrnorm(n1, mt1, S)
X2 <- mvrnorm(n2, mt2, S)
DATA_Cpp <- rbind(X1, X2)
kNN1 <- kNNdistplot(DATA_Cpp, k = 5)
abline(h=.1, col = "red", lty=2)
abline(h=.2, col = "red", lty=2)
abline(h=.3, col = "red", lty=2)
abline(h=.4, col = "red", lty=2)
abline(h=.5, col = "red", lty=2)
plot(X1, ylim = c(-5,10), xlim = c(-5,10), pch = 19, col = "blue", xlab = "X", ylab = "Y", font = 2, asp = 1)
abline(v = 0, h = 0, col = "gray")
points(X2, pch = 19, col = "orange")
# Write to CSV
write.csv(DATA_Cpp, "DataCpp-2D-20000.csv")
