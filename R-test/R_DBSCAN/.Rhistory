source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/R-Test_DBSCAN.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/R-Test_DBSCAN.R', echo=TRUE)
plot(DataCpp)
plot(DataCpp[2:3])
symbols(x=DataCpp[10,2], y=DataCpp[10,2], circles=rep(0.5), add=T, inches=F)
plot(DataCpp[2:3])
symbols(x=DataCpp[10,2], y=DataCpp[10,3], circles=rep(0.5), add=T, inches=F)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/R-Test_DBSCAN.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/R-Test_DBSCAN.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/R-Test_DBSCAN.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/R-Test_DBSCAN.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/R-Test_DBSCAN.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/R-Test_DBSCAN.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/R-Test_DBSCAN.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/R-Test_DBSCAN.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/R-Test_DBSCAN.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/R-Test_DBSCAN.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/R-Test_DBSCAN.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/R-Test_DBSCAN.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/R-Test_DBSCAN.R', echo=TRUE)
# cols <- c((-1)='red',1='blue',2='green',3='yellow');
# plot(Data_Cluster[,1:2], xlim=c(0,8), ylim=c(0,8),col=cols[Data_Cluster[3]])
show(3^10)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/R-Test_DBSCAN.R', echo=TRUE)
library(MASS)
S <- matrix(c(1,0,0,1),2,2)
mt1 <- c(2,2)
mt2 <- c(6,0)
n1 <- 1000
n2 <- 1000
n <- n1 + n2
X1 <- mvrnorm(n1, mt1, S)
X2 <- mvrnorm(n2, mt2, S)
DATA_Cpp <- rbind(X1, X2)
kNN1 <- kNNdistplot(DATA_Cpp, k = 5)
abline(h=.5, col = "red", lty=2)
# Write to CSV
write.csv(DATA_Cpp, "DataCpp-2D-1000.csv")
plot(X1, ylim = c(-5,5), xlim = c(-2,10), pch = 19, col = "blue", xlab = "X", ylab = "Y", font = 2, asp = 1)
abline(v = 0, h = 0, col = "gray")
points(X2, pch = 19, col = "orange")
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/R-Test_DBSCAN.R', echo=TRUE)
Data_Cluster <- as.data.frame(read.table("~/GitHub/DBSCAN_VP-TREE_Cpp/Data_Cluster.csv", header=FALSE,sep=","))
#Data_Cluster <- as.data.frame(read.table("D:/Programming/Data-Mining-EiTI---DBSCAN-VP-TREE-C-/Data_Cluster.csv", header=FALSE,sep=","))
cluster <- as.factor(Data_Cluster[,3])
library(ggplot2)
#sp <- ggplot(Data_Cluster[,1:2], aes(x=V1, y=V2, colour = cluster, size = cluster)) + geom_point() + geom_point(size = 50, pch = 1) + coord_cartesian(xlim =c(-1, 8), ylim = c(-1, 8))
sp <- ggplot(Data_Cluster[,1:2], aes(x=V1, y=V2, colour = cluster)) + geom_point() + geom_point(aes(size = 0.5), pch = 1) + theme(
axis.ticks.length.y = unit(.25, "cm"),
axis.ticks.length.x = unit(-.25, "cm"),
axis.text.x = element_text(margin = margin(t = .3, unit = "cm"))
)
show(sp)
# Test
library(readr)
library(tidyverse)
library(dbscan)
#
# forestfires <- read_csv("forestfires.csv")
# View(forestfires)
#
#
# #forestfires$ISI <- forestfires$ISI[which.max(forestfires$ISI < 30.0)]
# plot(forestfires$ISI, forestfires$temp, xlim=c(0,26))
# Live <- read_csv("Live.csv")
# View(Live)
# plot(Live$num_comments, Live$num_likes)
# ### Cambridge data
# Cambridge_Crime_Data_2009_2016 <- read_csv("Cambridge Crime Data 2009-2016.csv")
# #View(Cambridge_Crime_Data_2009_2016)
#
# Cambridge_Crime_Data_2009_2016$Crime <- as.numeric(factor(Cambridge_Crime_Data_2009_2016$Crime))
# Cambridge_Crime_Data_2009_2016$`Crime Date Time` <- as.numeric(factor(Cambridge_Crime_Data_2009_2016$`Crime Date Time`))
# plot(Cambridge_Crime_Data_2009_2016$Crime, Cambridge_Crime_Data_2009_2016$`Crime Date Time`)
#
# ## Example 1: use dbscan on the iris data set
# data(iris)
# iris <- as.matrix(iris[,1:4])
# ## find suitable eps parameter using a k-NN plot for k = dim + 1
# ## Look for the knee!
# kNNdistplot(iris, k = 5)
# abline(h=.5, col = "red", lty=2)
# res <- dbscan(iris, eps = .5, minPts = 5)
# show(res)
#
# plot(iris[,1], iris[,3])
###################################################################################
# Plot some data for C++ project
library(MASS)
S <- matrix(c(1,0,0,1),2,2)
mt1 <- c(2,2)
mt2 <- c(6,0)
n1 <- 1000
n2 <- 1000
n <- n1 + n2
X1 <- mvrnorm(n1, mt1, S)
X2 <- mvrnorm(n2, mt2, S)
DATA_Cpp <- rbind(X1, X2)
kNN1 <- kNNdistplot(DATA_Cpp, k = 5)
abline(h=.5, col = "red", lty=2)
# Write to CSV
write.csv(DATA_Cpp, "DataCpp-2D-1000.csv")
plot(X1, ylim = c(-5,5), xlim = c(-2,10), pch = 19, col = "blue", xlab = "X", ylab = "Y", font = 2, asp = 1)
abline(v = 0, h = 0, col = "gray")
points(X2, pch = 19, col = "orange")
Data_Cluster <- as.data.frame(read.table("Data_Clustered.csv", header=FALSE,sep=","))
Data_Cluster <- as.data.frame(read.table("Data_Clustered.csv", header=FALSE,sep=","))
cluster <- as.factor(Data_Cluster[,3])
library(ggplot2)
sp <- ggplot(Data_Cluster[,1:2], aes(x=V1, y=V2, colour = cluster)) + geom_point() + geom_point(aes(size = 0.5), pch = 1) + theme(
axis.ticks.length.y = unit(.25, "cm"),
axis.ticks.length.x = unit(-.25, "cm"),
axis.text.x = element_text(margin = margin(t = .3, unit = "cm"))
)
show(sp)
sp <- ggplot(Data_Cluster[,1:2], aes(x=V1, y=V2, colour = cluster)) + geom_point() + geom_point(aes(size = 0.5), pch = 1) + theme(
axis.ticks.length.y = unit(.25, "cm"),
axis.ticks.length.x = unit(-.25, "cm"),
axis.text.x = element_text(margin = margin(t = 0.3, unit = "cm"))
)
show(sp)
sp <- ggplot(Data_Cluster[,1:2], aes(x=V1, y=V2, colour = cluster)) + geom_point() + geom_point(aes(size = 0.3), pch = 1) + theme(
axis.ticks.length.y = unit(.25, "cm"),
axis.ticks.length.x = unit(-.25, "cm"),
axis.text.x = element_text(margin = margin(t = 0.3, unit = "cm"))
)
show(sp)
sp <- ggplot(Data_Cluster[,1:2], aes(x=V1, y=V2, colour = cluster)) + geom_point() + geom_point(aes(size = 1), pch = 1) + theme(
axis.ticks.length.y = unit(.25, "cm"),
axis.ticks.length.x = unit(-.25, "cm"),
axis.text.x = element_text(margin = margin(t = 0.3, unit = "cm"))
)
show(sp)
sp <- ggplot(Data_Cluster[,1:2], aes(x=V1, y=V2, colour = cluster)) + geom_point() + geom_point(aes(size = 1, unit = "cm"), pch = 1) + theme(
axis.ticks.length.y = unit(.25, "cm"),
axis.ticks.length.x = unit(-.25, "cm"),
axis.text.x = element_text(margin = margin(t = 0.3, unit = "cm"))
)
sp <- ggplot(Data_Cluster[,1:2], aes(x=V1, y=V2, colour = cluster)) + geom_point() + geom_point(aes(size = 50), pch = 1) + theme(
axis.ticks.length.y = unit(.25, "cm"),
axis.ticks.length.x = unit(-.25, "cm"),
axis.text.x = element_text(margin = margin(t = 0.3, unit = "cm"))
)
show(sp)
sp <- ggplot(Data_Cluster[,1:2], aes(x=V1, y=V2, colour = cluster)) + geom_point() + geom_point(size = 50, pch = 1) + theme(
axis.ticks.length.y = unit(.25, "cm"),
axis.ticks.length.x = unit(-.25, "cm"),
axis.text.x = element_text(margin = margin(t = 0.3, unit = "cm"))
)
show(sp)
sp <- ggplot(Data_Cluster[,1:2], aes(x=V1, y=V2, colour = cluster)) + geom_point() + geom_point(size = 10, pch = 1) + theme(
axis.ticks.length.y = unit(.25, "cm"),
axis.ticks.length.x = unit(-.25, "cm"),
axis.text.x = element_text(margin = margin(t = 0.3, unit = "cm"))
)
show(sp)
sp <- ggplot(Data_Cluster[,1:2], aes(x=V1, y=V2, colour = cluster), xlim=c(0,1), ylim=c(0,1)) + geom_point() + geom_point(size = 10, pch = 1) + theme(
axis.ticks.length.y = unit(.25, "cm"),
axis.ticks.length.x = unit(-.25, "cm"),
axis.text.x = element_text(margin = margin(t = 0.3, unit = "cm"))
)
show(sp)
sp <- ggplot(Data_Cluster[,1:2], aes(x=V1, y=V2, colour = cluster), xlim(0,1), ylim(0,1)) + geom_point() + geom_point(size = 10, pch = 1) + theme(
axis.ticks.length.y = unit(.25, "cm"),
axis.ticks.length.x = unit(-.25, "cm"),
axis.text.x = element_text(margin = margin(t = 0.3, unit = "cm"))
)
show(sp)
sp <- ggplot(Data_Cluster[,1:2], aes(x=V1, y=V2, colour = cluster)) + geom_point() + geom_point(size = 10, pch = 1) + coord_fixed(ratio = 1) + theme(
axis.ticks.length.y = unit(.25, "cm"),
axis.ticks.length.x = unit(-.25, "cm"),
axis.text.x = element_text(margin = margin(t = 0.3, unit = "cm"))
)
show(sp)
sp <- ggplot(Data_Cluster[,1:2], aes(x=V1, y=V2, colour = cluster)) + geom_point() + geom_point(size = 10, pch = 1) + theme(
axis.ticks.length.y = unit(.25, "cm"),
axis.ticks.length.x = unit(-.25, "cm"),
axis.text.x = element_text(margin = margin(t = 0.3, unit = "cm"))
)
sp + coord_fixed(ratio = 1)
show(sp)
sp <- ggplot(Data_Cluster[,1:2], aes(x=V1, y=V2, colour = cluster)) + geom_point() + geom_point(size = 10, pch = 1)
sp + coord_fixed(ratio = 1)
show(sp)
sp <- ggplot(Data_Cluster[,1:2], aes(x=V1, y=V2, colour = cluster)) + geom_point()
sp + coord_fixed(ratio = 1)
show(sp)
sp <- ggplot(Data_Cluster[,1:2], aes(x=V1, y=V2, colour = cluster)) + geom_point() + theme(aspect.ratio = 1)
sp <- sp + coord_fixed(ratio = 1)
show(sp)
sp <- ggplot(Data_Cluster[,1:2], aes(x=V1, y=V2, colour = cluster)) + geom_point() #+ theme(aspect.ratio = 1)
sp <- sp + coord_fixed(ratio = 1)
show(sp)
sp <- ggplot(Data_Cluster[,1:2], aes(x=V1, y=V2, colour = cluster)) + geom_point() #+ theme(aspect.ratio = 1)
sp <- sp + coord_cartesian(1)
show(sp)
sp <- ggplot(Data_Cluster[,1:2], aes(x=V1, y=V2, colour = cluster)) + geom_point() #+ theme(aspect.ratio = 1)
sp <- sp + coord_cartesian(xlim = c(0,4), ylim = c(0,4))
show(sp)
sp <- ggplot(Data_Cluster[,1:2], aes(x=V1, y=V2, colour = cluster)) + geom_point() + theme(aspect.ratio = 1)
sp <- sp + coord_equal() #+ coord_cartesian(xlim = c(0,4), ylim = c(0,4))
show(sp)
sp <- ggplot(Data_Cluster[,1:2], aes(x=V1, y=V2, colour = cluster)) + geom_point() #+ theme(aspect.ratio = 1)
sp <- sp + coord_equal() #+ coord_cartesian(xlim = c(0,4), ylim = c(0,4))
show(sp)
sp <- ggplot(Data_Cluster[,1:2], aes(x=V1, y=V2, colour = cluster)) + geom_point() #+ theme(aspect.ratio = 1)
sp <- sp + coord_equal() + geom_point(aes(size=10), pch=1) #+ coord_cartesian(xlim = c(0,4), ylim = c(0,4))
show(sp)
sp <- sp + coord_equal() + geom_point(size=10, pch=1) #+ coord_cartesian(xlim = c(0,4), ylim = c(0,4))
show(sp)
coord
sp <- ggplot(Data_Cluster[,1:2], aes(x=V1, y=V2, colour = cluster)) + geom_point() #+ theme(aspect.ratio = 1)
sp <- sp + coord_equal() + geom_point(size=10, pch=1) #+ coord_cartesian(xlim = c(0,4), ylim = c(0,4))
show(sp)
sp <- ggplot(Data_Cluster[,1:2], aes(x=V1, y=V2, colour = cluster)) + geom_point() #+ theme(aspect.ratio = 1)
sp <- sp + coord_equal() + geom_point(size=30, pch=1) #+ coord_cartesian(xlim = c(0,4), ylim = c(0,4))
show(sp)
sp <- ggplot(Data_Cluster[,1:2], aes(x=V1, y=V2, colour = cluster)) + geom_point() #+ theme(aspect.ratio = 1)
sp <- sp + coord_fixed(ratio = 1) +  geom_point(size=0.3, pch=1) #+ coord_cartesian(xlim = c(0,4), ylim = c(0,4))
show(sp)
sp <- sp + geom_point(size=0.3, pch=1) #+ coord_cartesian(xlim = c(0,4), ylim = c(0,4))
show(sp)
sp <- ggplot(Data_Cluster[,1:2], aes(x=V1, y=V2, colour = cluster)) + geom_point() + scale_x_continuous() + scale_y_continuous() #+ theme(aspect.ratio = 1)
sp <- sp + coord_fixed(ratio = 1)
sp <- sp + geom_point(size=0.3, pch=1) #+ coord_cartesian(xlim = c(0,4), ylim = c(0,4))
show(sp)
sp <- ggplot(Data_Cluster[,1:2], aes(x=V1, y=V2, colour = cluster)) + geom_point() + scale_x_continuous() + scale_y_continuous() #+ theme(aspect.ratio = 1)
sp <- sp + coord_fixed(ratio = 1) + scale_size()
sp <- sp + geom_point(size=0.3, pch=1) #+ coord_cartesian(xlim = c(0,4), ylim = c(0,4))
show(sp)
sp <- ggplot(Data_Cluster[,1:2], aes(x=V1, y=V2, colour = cluster)) + geom_point() + scale_x_continuous() + scale_y_continuous() #+ theme(aspect.ratio = 1)
sp <- sp + coord_fixed(ratio = 1)
sp <- sp + geom_point(scale_size(size=0.3), pch=1) #+ coord_cartesian(xlim = c(0,4), ylim = c(0,4))
show(sp)
sp <- ggplot(Data_Cluster[,1:2], aes(x=V1, y=V2, colour = cluster)) + geom_point() + scale_x_continuous() + scale_y_continuous() #+ theme(aspect.ratio = 1)
sp <- sp + coord_fixed(ratio = 1)
sp <- sp + geom_point(size=3, pch=1) #+ coord_cartesian(xlim = c(0,4), ylim = c(0,4))
show(sp)
sp <- ggplot(Data_Cluster[,1:2], aes(x=V1, y=V2, colour = cluster)) + geom_point() + scale_x_continuous() + scale_y_continuous() #+ theme(aspect.ratio = 1)
sp <- sp + coord_fixed(ratio = 1)
sp <- sp + geom_point(size=10, pch=1) #+ coord_cartesian(xlim = c(0,4), ylim = c(0,4))
show(sp)
sp <- ggplot(x=0,y=0, aes(x=V1, y=V2, colour = cluster)) + geom_point() + scale_x_continuous() + scale_y_continuous() #+ theme(aspect.ratio = 1)
n
sp1 <- ggplot(x=0, y=0) + geom_point() + coord_fixed(ratio = 1) + geom_point(size=10, pch=1)
show(sp1)
sp1 <- ggplot(aes(x=0, y=0)) + geom_point() + coord_fixed(ratio = 1) + geom_point(size=10, pch=1)
show(sp1)
x <- c(0,1,5)
y <- c(0,1,5)
kappa <- c(x,y)
kappa <- as.data.frame(x,y)
kappa <- cbind(y)
x <- c(0,1,5)
y <- c(0,1,5)
kappa <- as.data.frame(x)
kappa <- cbind(y)
kappa <- as.data.frame(x)
kappa <- cbind(kappa,y)
View(kappa)
sp1 <- ggplot(kappa, aes(x=x, y=y)) + geom_point() + coord_fixed(ratio = 1) + geom_point(size=10, pch=1)
show(sp1)
x <- c(0,1,5)
y <- c(0,1,3)
kappa <- as.data.frame(x)
kappa <- cbind(kappa,y)
sp1 <- ggplot(kappa, aes(x=x, y=y)) + geom_point() + coord_fixed(ratio = 1) + geom_point(size=10, pch=1)
show(sp1)
sp1 <- ggplot(kappa, aes(x=x, y=y)) + geom_point() + coord_fixed(ratio = 1) + geom_point(size=100, pch=1)
show(sp1)
sp1 <- ggplot(kappa, aes(x=x, y=y)) + geom_point() + coord_fixed(ratio = 1) + geom_point(pch=1, size=100)
show(sp1)
install.packages("ggforce")
library(ggplot2)
library(ggforce)
x <- c(0,1,5)
y <- c(0,1,3)
kappa <- as.data.frame(x)
kappa <- cbind(kappa,y)
sp1 <- ggplot(kappa, aes(x=x, y=y)) + geom_point() + coord_fixed(ratio = 1) + geom_point(pch=1, size=100)
show(sp1)
sp1 <- ggplot(kappa, aes(x=x, y=y)) + geom_point() + coord_fixed(ratio = 1) + geom_point(pch=1)
show(sp1)
sp1 <- ggplot(kappa, aes(x=x, y=y)) + geom_point() + coord_fixed(ratio = 1) + geom_circle(x=x,x=y,r=1)
show(sp1)
sp1 <- ggplot(kappa, aes(x=x, y=y)) + geom_point() + coord_fixed(ratio = 1) + geom_circle(x0=x,y0=y,r=1)
show(sp1)
sp1 <- ggplot(kappa, aes(x=x, y=y)) + geom_point() + coord_fixed(ratio = 1) + geom_circle(aes(x0=x, y0=y, r= 1), data= kappa))
sp1 <- ggplot(kappa, aes(x=x, y=y)) + geom_point() + coord_fixed(ratio = 1) + geom_circle(aes(x0=x, y0=y, r= 1), data= kappa)
show(sp1)
sp1 <- ggplot(kappa, aes(x=x, y=y)) + geom_point() + coord_fixed(ratio = 1) + geom_circle(aes(x0=kappa$x, y0=kappa$y, r= 10), data= kappa)
show(sp1)
gc()
rm(list = ls())         # Clear Environment
gc()                    # Free up memrory and report the memory usage.
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
Dane <- as.data.frame(read.table("DataCpp-2D-1000.csv", header=FALSE,sep=","))
Dane <- as.data.frame(read.table("DataCpp-2D-1000.csv", header=TRUE,sep=","))
Dane <- Dane[,1:]
Dane <- Dane[[,1:]]
Dane <- Dane[1]
Dane <- as.data.frame(read.table("DataCpp-2D-1000.csv", header=TRUE,sep=","))
Dane <- Dane[:,1:]
Dane <- Dane[-"X"]
Dane <- Dane[1:30]
Dane <- Dane[1:30,2]
Dane <- Dane[1:30,1:]
Dane <- Dane[1:30,1:ncol(Dane)]
Dane <- Dane[-Dane$X]
Dane <- as.data.frame(read.table("DataCpp-2D-1000.csv", header=TRUE,sep=","))
Dane <- Dane[-Dane$X]
View(Dane)
Dane <- as.data.frame(read.table("DataCpp-2D-1000.csv", header=TRUE,sep=","))
Dane <- Dane[Dane$X]
Dane <- Dane[,-Dane$X]
Dane <- as.data.frame(read.table("DataCpp-2D-1000.csv", header=TRUE,sep=","))
Dane <- Dane[1:nrow(Dane),-Dane$X]
Dane <- as.data.frame(read.table("DataCpp-2D-1000.csv", header=TRUE,sep=","))
Dane <- Dane[1:nrow(Dane),1:ncol(Dane)]
Dane <- Dane[1:nrow(Dane),2:ncol(Dane)]
Dane <- colnames(x = Dane, c("x","y"))
Dane <- colnames(x = Dane, c(x,y))
Dane <- colnames(x = Dane, c("x","y"))
colnames(Dane) <- c("x", "y")
P <- sample (Dane, size=100, replace =F)
?dist
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
P <- Dane[sample(nrow(Dane), 10, replace = F), ]
View(P)
View(Dane)
best_spread <- 0
best_p <- 0
D <- P[sample(nrow(P), 3, replace = F), ]
dist_all <- NULL
for(i in 1:nrow(D)) dist_all[i] <- euc.dist(p, D[i,])
for(i in 1:nrow(D)) dist_all[i] <- euc.dist(P[1], D[i,])
for(i in 1:nrow(D)) dist_all[i] <- euc.dist(P[1,], D[i,])
mu <- median(dist_all)
spread_temp <- var(dist_all - mu)
show("MU = " + mu)
show("MU = ", mu)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
View(node.p)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
View(node.p)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
source('~/GitHub/DBSCAN_VP-TREE_Cpp/R-test/R_DBSCAN/Algo_Test.R', echo=TRUE)
